* Correct casesCreateState: one withColonCreateState: another withoutColon*Correct CreateState state_name valueCreateState this isJustATest*Handles extra spacesCreateState  spacesBefore FirstArgmentCreateState spacesBetween  FirstArgument*Incorrect cases*State alreay existsCreateState this isNot*Too many argumentsCreateState that is too many*Too few argumentsCreateState thisIsJustATest*Correct cases*Colon optionalSetState: this hasColonSetState this doesNot*Correct SetState state_name valueSetState this IsCorrect*Incorrect cases*State not foundSetState thisState doesNotExists*Too Many argumentsSetState this is just a test*Too few argumentsSetState this*Correct cases* colon optionalIf this IsCorrectendifIf: this IsCorrectendif* Testing createstate/setstate and how it influences the if testCreatestate state trueif state true.Point at object1endifif state true.Look at object2endif* Note that this setstate does not influence the two ifs abovesetstate state false* ....but will influence this ifif state true.Point at object3endif* This will also have no effect on above ifsetstate state true*Incorrect cases*state not foundIf thisIs True*too many argumentsIf this is true*too few argumentsIf this*Correct cases*Correct: EndIfEndIf*Incorrect cases*too many argumentsEndIf this* (GoTo is not being properly highlighted yet)*Correct Cases* Colon on GoTo optional (colon on Goal still required!!!)goto: Goal: handsGoTo Goal: hands* Incorrect cases* Non-existent goalgoto goal feet* Infinite loopgoal do not loop megoto goal do not loop meGoal hands